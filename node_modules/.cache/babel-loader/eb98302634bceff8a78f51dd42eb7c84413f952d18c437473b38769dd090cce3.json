{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHBAZ ANSHARI\\\\Desktop\\\\temp_taiyo\\\\Task_assignment\\\\src\\\\Components\\\\WorldMap.jsx\";\nimport { Marker, Popup } from \"react-leaflet\";\nimport L from 'leaflet';\nimport markerIcon from '../utils/marker_icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldMap = countries => {\n  const {\n    countriesData\n  } = countries;\n  const customMarker = L.icon({\n    iconUrl: markerIcon,\n    iconSize: [20, 25],\n    iconAnchor: [15, 30]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countriesData === null || countriesData === void 0 ? void 0 : countriesData.map(country => /*#__PURE__*/_jsxDEV(Marker, {\n      icon: customMarker,\n      position: [country.countryInfo.lat, country.countryInfo.long],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: country.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Active Cases: \", country.active, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 52\n            }, this), \"Recovered Cases: \", country.recovered, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 58\n            }, this), \"Deaths: \", country.deaths]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this)\n    }, country.countryInfo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = WorldMap;\nexport default WorldMap;\nvar _c;\n$RefreshReg$(_c, \"WorldMap\");","map":{"version":3,"names":["Marker","Popup","L","markerIcon","jsxDEV","_jsxDEV","WorldMap","countries","countriesData","customMarker","icon","iconUrl","iconSize","iconAnchor","children","map","country","position","countryInfo","lat","long","fileName","_jsxFileName","lineNumber","columnNumber","active","recovered","deaths","_id","_c","$RefreshReg$"],"sources":["C:/Users/SAHBAZ ANSHARI/Desktop/temp_taiyo/Task_assignment/src/Components/WorldMap.jsx"],"sourcesContent":["import { Marker, Popup } from \"react-leaflet\"\nimport L from 'leaflet';\nimport markerIcon from '../utils/marker_icon.png';\nconst WorldMap=(countries)=>{\n\n  const {countriesData}=countries\n  const customMarker = L.icon({\n    iconUrl: markerIcon,\n    iconSize: [20, 25],\n    iconAnchor: [15, 30]\n  });\n  \n\n    return(\n        <div >\n               {countriesData?.map((country) => (\n            <Marker\n              icon={customMarker}\n              key={country.countryInfo._id}\n              position={[country.countryInfo.lat, country.countryInfo.long]}\n            >\n              <Popup>\n                <div>\n                  <h2>{country.country}</h2>\n                  <p>\n                    Active Cases: {country.active} <br />\n                    Recovered Cases: {country.recovered} <br />\n                    Deaths: {country.deaths}\n                  </p>\n                </div>\n              </Popup>\n            </Marker>\n          ))}\n        </div>\n    )\n}\n \n\nexport default WorldMap"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAC7C,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,MAAMC,QAAQ,GAAEC,SAAS,IAAG;EAE1B,MAAM;IAACC;EAAa,CAAC,GAACD,SAAS;EAC/B,MAAME,YAAY,GAAGP,CAAC,CAACQ,IAAI,CAAC;IAC1BC,OAAO,EAAER,UAAU;IACnBS,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;EACrB,CAAC,CAAC;EAGA,oBACIR,OAAA;IAAAS,QAAA,EACQN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,GAAG,CAAEC,OAAO,iBAC/BX,OAAA,CAACL,MAAM;MACLU,IAAI,EAAED,YAAa;MAEnBQ,QAAQ,EAAE,CAACD,OAAO,CAACE,WAAW,CAACC,GAAG,EAAEH,OAAO,CAACE,WAAW,CAACE,IAAI,CAAE;MAAAN,QAAA,eAE9DT,OAAA,CAACJ,KAAK;QAAAa,QAAA,eACJT,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAKE,OAAO,CAACA;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAC1BnB,OAAA;YAAAS,QAAA,GAAG,gBACa,EAACE,OAAO,CAACS,MAAM,EAAC,GAAC,eAAApB,OAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,qBACpB,EAACR,OAAO,CAACU,SAAS,EAAC,GAAC,eAAArB,OAAA;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,YACnC,EAACR,OAAO,CAACW,MAAM;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA,GAZHR,OAAO,CAACE,WAAW,CAACU,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAc/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd,CAAC;AAAAK,EAAA,GAhCKvB,QAAQ;AAmCd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}